{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/10-starting-project/src/App.js\";\n\n/*import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/store/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //console.log(\"loop\")\n\n  //this function don't run directly in the component function\n  // this functions is executed after every component re-evaluation\n  // this effect only ran once, when the component rendered for the first time\n  useEffect(() => {\n    //console.log(\"useEfect-1\")\n    const storeUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storeUserLoggedInInformation === \"1\") {\n      //console.log(\"useEfect-2\")\n\n      setIsLoggedIn(true);\n    }\n  }, []); //if doesn't have [] this code reruns whenever the component was reredered and if we have state in here  this would trigger a rerender cycle itself hence we would have an infinite loop\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      }}\n    >\n      <MainHeader/>\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App; */\n// class 125\nimport React from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Login","Home","MainHeader","App","isLoggedIn","loginHandler","logoutHandler"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/10-starting-project/src/App.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/store/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //console.log(\"loop\")\n\n  //this function don't run directly in the component function\n  // this functions is executed after every component re-evaluation\n  // this effect only ran once, when the component rendered for the first time\n  useEffect(() => {\n    //console.log(\"useEfect-1\")\n    const storeUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storeUserLoggedInInformation === \"1\") {\n      //console.log(\"useEfect-2\")\n\n      setIsLoggedIn(true);\n    }\n  }, []); //if doesn't have [] this code reruns whenever the component was reredered and if we have state in here  this would trigger a rerender cycle itself hence we would have an infinite loop\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      }}\n    >\n      <MainHeader/>\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App; */\n\n// class 125\n\nimport React  from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;EACb,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,WACG,CAACC,UAAD,iBAAe,QAAC,KAAD;QAAO,OAAO,EAAEC;MAAhB;QAAA;QAAA;QAAA;MAAA,QADlB,EAEGD,UAAU,iBAAI,QAAC,IAAD;QAAM,QAAQ,EAAEE;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAVQH,G;AAYT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}