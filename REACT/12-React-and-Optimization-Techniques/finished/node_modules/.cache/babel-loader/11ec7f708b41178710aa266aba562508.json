{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/12-React-and-Optimization-Techniques/finished/src/App.js\",\n    _s = $RefreshSig$();\n\n/*import Button from \"./components/UI/Button/Button\";\nimport React, { useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/Demo/DemoOutput\"; */\n\n/*\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n\n  console.log(\"APP RUNNING\");\n\n  const toogleParagraphHandler = useCallback(() => {\n    //useCallback return that stored function , and when the app function reruns useCallback will look for  that stored function and reuse that same function object\n    // here we have a clousure  \n    if (allowToggle) {\n      setShowParagraph((prevShowParagraph) => !prevShowParagraph);\n    }\n  }, [allowToggle]); //this dependencies are the same as they are for useEffect\n\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      \n      <DemoOutput show={showParagraph} />\n      <Button onClick={allowToggleHandler}>Allow Toggling</Button>\n      <Button onClick={toogleParagraphHandler}> Toggle Paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;\n*/\nimport React, { useState, useCallback, useMemo } from 'react';\nimport './App.css';\nimport DemoList from './components/Demo/DemoList';\nimport Button from './components/UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [listTitle, setListTitle] = useState('My List');\n  const changeTitleHandler = useCallback(() => {\n    setListTitle('New Title');\n  }, []); //const listItems = useMemo(() => [5, 3, 1, 10, 9], []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(DemoList, {\n      title: listTitle,\n      items: [5, 3, 1, 10, 9]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: changeTitleHandler,\n      children: \"Change List Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gJ08/yMRzOdIGKo0jSaL5pEWWPY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","DemoList","Button","App","listTitle","setListTitle","changeTitleHandler"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/12-React-and-Optimization-Techniques/finished/src/App.js"],"sourcesContent":["/*import Button from \"./components/UI/Button/Button\";\nimport React, { useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/Demo/DemoOutput\"; */\n/*\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n\n  console.log(\"APP RUNNING\");\n\n  const toogleParagraphHandler = useCallback(() => {\n    //useCallback return that stored function , and when the app function reruns useCallback will look for  that stored function and reuse that same function object\n    // here we have a clousure  \n    if (allowToggle) {\n      setShowParagraph((prevShowParagraph) => !prevShowParagraph);\n    }\n  }, [allowToggle]); //this dependencies are the same as they are for useEffect\n\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      \n      <DemoOutput show={showParagraph} />\n      <Button onClick={allowToggleHandler}>Allow Toggling</Button>\n      <Button onClick={toogleParagraphHandler}> Toggle Paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\n\nimport React, { useState, useCallback, useMemo } from 'react';\n\nimport './App.css';\nimport DemoList from './components/Demo/DemoList';\nimport Button from './components/UI/Button/Button';\n\nfunction App() {\n  const [listTitle, setListTitle] = useState('My List');\n\n  const changeTitleHandler = useCallback(() => {\n    setListTitle('New Title');\n  }, []);\n\n  //const listItems = useMemo(() => [5, 3, 1, 10, 9], []);\n\n  return (\n    <div className=\"app\">\n      <DemoList title={listTitle} items={[5, 3, 1, 10, 9]} />\n      <Button onClick={changeTitleHandler}>Change List Title</Button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,SAAD,CAA1C;EAEA,MAAMQ,kBAAkB,GAAGP,WAAW,CAAC,MAAM;IAC3CM,YAAY,CAAC,WAAD,CAAZ;EACD,CAFqC,EAEnC,EAFmC,CAAtC,CAHa,CAOb;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAU,KAAK,EAAED,SAAjB;MAA4B,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,CAAd;IAAnC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,OAAO,EAAEE,kBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAfQH,G;;KAAAA,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}