{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/12-React-and-Optimization-Techniques/finished/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"./components/UI/Button/Button\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/UI/Button/Demo/DemoOutput\";\n/**\n - In this example \n - If  <DemoOutput show={false}/> what would you expect as a result?\n-\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  console.log(\"APP RUNNING\");\n\n  const toogleParagraphHandler = () => {\n    setShowParagraph(prevShowParagraph => !prevShowParagraph);\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /*all those js elements here  in the end are like function calls to the respect of component functions, that's why those child components are also re-executed  and re-evaluated just because the parent component changed */\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hi there!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n        show: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toogleParagraphHandler,\n        children: \" Toggle Paragraph!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"eoYUlDKWxWYgikVZpaPr2UN2QyM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","React","useState","DemoOutput","App","showParagraph","setShowParagraph","console","log","toogleParagraphHandler","prevShowParagraph"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/12-React-and-Optimization-Techniques/finished/src/App.js"],"sourcesContent":["import Button from \"./components/UI/Button/Button\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/UI/Button/Demo/DemoOutput\";\n\n/**\n - In this example \n - If  <DemoOutput show={false}/> what would you expect as a result?\n-\n\n*/\nfunction App() {\n  const [showParagraph, setShowParagraph] = useState(false);\n\n  console.log(\"APP RUNNING\");\n\n  const toogleParagraphHandler = () => {\n    setShowParagraph((prevShowParagraph) => !prevShowParagraph);\n  };\n\n  return (\n     /*all those js elements here  in the end are like function calls to the respect of component functions, that's why those child components are also re-executed  and re-evaluated just because the parent component changed */\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={false} />\n      <Button onClick={toogleParagraphHandler}> Toggle Paragraph!</Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,KAAD,CAAlD;EAEAK,OAAO,CAACC,GAAR,CAAY,aAAZ;;EAEA,MAAMC,sBAAsB,GAAG,MAAM;IACnCH,gBAAgB,CAAEI,iBAAD,IAAuB,CAACA,iBAAzB,CAAhB;EACD,CAFD;;EAIA;IAAA;;IACG;IACD;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAY,IAAI,EAAE;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,MAAD;QAAQ,OAAO,EAAED,sBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAQD;;GAjBQL,G;;KAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}