{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/11-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\"; // the goal  of this component is simply  to manage  the current context to data and provide that context  to all components that want access to it\n\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  //return a new state snaphot\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {};\n\n  const removeItemFromCartHandler = id => {}; //this will be the concrete context value thought  which will aso be updated over time\n\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/11-starting-project/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\n\n// the goal  of this component is simply  to manage  the current context to data and provide that context  to all components that want access to it\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  //return a new state snaphot\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {};\n  const removeItemFromCartHandler = (id) => {};\n\n  //this will be the concrete context value thought  which will aso be updated over time\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {/*THis allows us to wrap any components that should get access to this context with this cart provider component */}\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC;EACA,OAAOL,gBAAP;AACD,CAHD;;AAKA,MAAMM,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCX,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;EAKA,MAAMU,oBAAoB,GAAIC,IAAD,IAAU,CAAE,CAAzC;;EACA,MAAMC,yBAAyB,GAAIC,EAAD,IAAQ,CAAE,CAA5C,CAP8B,CAS9B;;;EACA,MAAMC,WAAW,GAAG;IAClBb,KAAK,EAAEO,SAAS,CAACP,KADC;IAElBC,WAAW,EAAEM,SAAS,CAACN,WAFL;IAGlBa,OAAO,EAAEL,oBAHS;IAIlBM,UAAU,EAAEJ;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE,WAA7B;IAAA,UAEGP,KAAK,CAACU;EAFT;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAvBD;;GAAMX,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}