{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/11-starting-project/src/store/CartProvider.js\";\nimport { useReducer } from \"react\"; // the goal  of this component is simply  to manage  the current context to data and provide that context  to all components that want access to it\n\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addItemToCartHandler = item => {};\n\nconst removeItemFromCartHandler = id => {}; //this will be the concrete context value thought  which will aso be updated over time\n\n\nconst cartContext = {\n  items: [],\n  totalAmount: 0,\n  addItem: addItemToCartHandler,\n  removeItem: removeItemFromCartHandler\n};\n\nconst CartProvider = props => {\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","items","totalAmount","addItem","removeItem","CartProvider","props","children"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/11-starting-project/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\n\n// the goal  of this component is simply  to manage  the current context to data and provide that context  to all components that want access to it\n\nimport CartContext from \"./cart-context\";\n\nconst addItemToCartHandler = (item) => {};\n\nconst removeItemFromCartHandler = (id) => {};\n\n//this will be the concrete context value thought  which will aso be updated over time\nconst cartContext = {\n  items: [],\n  totalAmount: 0,\n  addItem: addItemToCartHandler,\n  removeItem: removeItemFromCartHandler,\n};\n\nconst CartProvider = (props) => {\n  return (\n    <CartContext.Provider value={cartContext}>\n      {/*THis allows us to wrap any components that should get access to this context with this cart provider component */}\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,oBAAoB,GAAIC,IAAD,IAAU,CAAE,CAAzC;;AAEA,MAAMC,yBAAyB,GAAIC,EAAD,IAAQ,CAAE,CAA5C,C,CAEA;;;AACA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,EADW;EAElBC,WAAW,EAAE,CAFK;EAGlBC,OAAO,EAAEP,oBAHS;EAIlBQ,UAAU,EAAEN;AAJM,CAApB;;AAOA,MAAMO,YAAY,GAAIC,KAAD,IAAW;EAC9B,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEN,WAA7B;IAAA,UAEGM,KAAK,CAACC;EAFT;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAPD;;KAAMF,Y;AASN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}