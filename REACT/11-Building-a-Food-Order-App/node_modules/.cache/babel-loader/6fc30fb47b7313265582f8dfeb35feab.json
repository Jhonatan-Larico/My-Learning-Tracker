{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/11-starting-project/src/store/CartProvider.js\";\n// the goal  of this component is simply  to manage  the current context to data and provide that context  to all components that want access to it \nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addItemToCartHandler = item => {};\n\nconst removeItemFromCartHandler = id => {}; //this will be the concrete context value thought  which will aso be updated over time \n\n\nconst cartContext = {\n  items: [],\n  totalAmount: 0,\n  addItem: addItemToCartHandler,\n  removeItem: removeItemFromCartHandler\n};\n\nconst CartProvider = props => {\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","items","totalAmount","addItem","removeItem","CartProvider","props","children"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/11-starting-project/src/store/CartProvider.js"],"sourcesContent":["// the goal  of this component is simply  to manage  the current context to data and provide that context  to all components that want access to it \n\nimport CartContext from \"./cart-context\";\n\n    const addItemToCartHandler = item =>{};\n\n    const removeItemFromCartHandler = id =>{}\n\n//this will be the concrete context value thought  which will aso be updated over time \nconst cartContext = {\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n}\n\nconst CartProvider = props =>{\n    return <CartContext.Provider value= {cartContext}>\n    {/*THis allows us to wrap any components that should get access to this context with this cart provider component */}\n        {props.children}\n    </CartContext.Provider>\n}\n\n\nexport default CartProvider "],"mappings":";AAAA;AAEA,OAAOA,WAAP,MAAwB,gBAAxB;;;AAEI,MAAMC,oBAAoB,GAAGC,IAAI,IAAG,CAAE,CAAtC;;AAEA,MAAMC,yBAAyB,GAAGC,EAAE,IAAG,CAAE,CAAzC,C,CAEJ;;;AACA,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE,EADS;EAEhBC,WAAW,EAAE,CAFG;EAGhBC,OAAO,EAAEP,oBAHO;EAIhBQ,UAAU,EAAEN;AAJI,CAApB;;AAOA,MAAMO,YAAY,GAAGC,KAAK,IAAG;EACzB,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAGN,WAA9B;IAAA,UAEFM,KAAK,CAACC;EAFJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAIH,CALD;;KAAMF,Y;AAQN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}