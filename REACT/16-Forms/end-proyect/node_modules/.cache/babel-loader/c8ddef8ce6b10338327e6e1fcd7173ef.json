{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/16-Forms/end-proyect/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputChangeHandler = e => {\n    // en very keystroke it obtained the value\n    //en every keystroke, this is fired, the enteredName state is updated\n    //\n    console.log(\"keystroke\");\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = () => {};\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName); // only when the form is submitted it obtained the value\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); //nameInputRef.current.value = \"\" =>NOT IDEAL,DON'T MANIPULATE THE DOM\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"h/RmuekR2WJO7SIqFFCJU6+IECs=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","nameInputChangeHandler","e","console","log","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputIsInvalid","nameInputClasses"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/16-Forms/end-proyect/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched ] = useState(false)\n\n  const nameInputChangeHandler = (e) => {\n    // en very keystroke it obtained the value\n    //en every keystroke, this is fired, the enteredName state is updated\n    //\n    console.log(\"keystroke\");\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = ()=>{\n\n  }\n\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true)\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n\n    console.log(enteredName);\n    // only when the form is submitted it obtained the value\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    //nameInputRef.current.value = \"\" =>NOT IDEAL,DON'T MANIPULATE THE DOM\n    setEnteredName(\"\")\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control \";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGH,MAAM,EAA3B;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA+CV,QAAQ,CAAC,KAAD,CAA7D;;EAEA,MAAMW,sBAAsB,GAAIC,CAAD,IAAO;IACpC;IACA;IACA;IACAC,OAAO,CAACC,GAAR,CAAY,WAAZ;IACAR,cAAc,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;EACD,CAND;;EAQA,MAAMC,oBAAoB,GAAG,MAAI,CAEhC,CAFD;;EAKA,MAAMC,qBAAqB,GAAIN,CAAD,IAAO;IACnCA,CAAC,CAACO,cAAF;IAEAT,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAIL,WAAW,CAACe,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BZ,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IAEAK,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAXmC,CAYnC;;IACA,MAAMgB,YAAY,GAAGjB,YAAY,CAACkB,OAAb,CAAqBN,KAA1C;IACAH,OAAO,CAACC,GAAR,CAAYO,YAAZ,EAdmC,CAgBnC;;IACAf,cAAc,CAAC,EAAD,CAAd;EACD,CAlBD;;EAoBA,MAAMiB,kBAAkB,GAAG,CAAChB,kBAAD,IAAuBE,kBAAlD;EAGA,MAAMe,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,eAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEL,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEM,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEpB,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAEO,sBAJZ;QAKE,MAAM,EAAEM,oBALV;QAME,KAAK,EAAEZ;MANT;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGkB,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAnED;;GAAMrB,W;;KAAAA,W;AAqEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}