{"ast":null,"code":"var _jsxFileName = \"/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/16-Forms/end-proyect/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = e => {\n    // en very keystroke it obtained the value\n    //en every keystroke, this is fired, the enteredName state is updated\n    //\n    console.log(\"keystroke\");\n    setEnteredName(e.target.value);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName); // only when the form is submitted it obtained the value\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue); //nameInputRef.current.value = \"\" =>NOT IDEAL,DON'T MANIPULATE THE DOM\n    //setEnteredName(\"\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"j75KwgsN5OXzz7U3c0XuGlztt9o=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","nameInputChangeHandler","e","console","log","target","value","formSubmissionHandler","preventDefault","trim","enteredValue","current"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/16-Forms/end-proyect/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true)\n\n  const nameInputChangeHandler = (e) => {\n    // en very keystroke it obtained the value\n    //en every keystroke, this is fired, the enteredName state is updated\n    //\n    console.log(\"keystroke\");\n    setEnteredName(e.target.value);\n  };\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false)\n      return;\n    }\n    setEnteredNameIsValid(true)\n\n    console.log(enteredName);\n    // only when the form is submitted it obtained the value\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n\n    //nameInputRef.current.value = \"\" =>NOT IDEAL,DON'T MANIPULATE THE DOM\n    //setEnteredName(\"\")\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {!enteredNameIsValid && <p className=\"error-text\" >Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGH,MAAM,EAA3B;EACA,MAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,IAAD,CAA5D;;EAEA,MAAMS,sBAAsB,GAAIC,CAAD,IAAO;IACpC;IACA;IACA;IACAC,OAAO,CAACC,GAAR,CAAY,WAAZ;IACAN,cAAc,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;EACD,CAND;;EAQA,MAAMC,qBAAqB,GAAIL,CAAD,IAAO;IACnCA,CAAC,CAACM,cAAF;;IAEA,IAAIX,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BT,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDA,qBAAqB,CAAC,IAAD,CAArB;IAEAG,OAAO,CAACC,GAAR,CAAYP,WAAZ,EATmC,CAUnC;;IACA,MAAMa,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBL,KAA1C;IACAH,OAAO,CAACC,GAAR,CAAYM,YAAZ,EAZmC,CAcnC;IACA;EACD,CAhBD;;EAkBA,oBACE;IAAM,QAAQ,EAAEH,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,GAAG,EAAEX,YADP;QAEE,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAEK,sBAJZ;QAKE,KAAK,EAAEJ;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASG,CAACE,kBAAD,iBAAuB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAT1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAjDD;;GAAML,W;;KAAAA,W;AAmDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}