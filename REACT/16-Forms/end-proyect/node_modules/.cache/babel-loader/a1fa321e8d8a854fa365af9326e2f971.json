{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === \"BLUR\") {\n    return {\n      isTouched: true,\n      value: state.value\n    };\n  }\n\n  if (action.type === \"RESET\") {\n    return {\n      isTouched: false,\n      value: \"\"\n    };\n  }\n\n  return inputStateReducer;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = e => {\n    dispatch({\n      type: \"INPUT\",\n      value: e.target.value\n    });\n  };\n\n  const inputBlurHandler = () => {\n    dispatch({\n      type: \"BLUR\"\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","e","target","inputBlurHandler","reset","isValid"],"sources":["/home/jhonatan/developer/My-Learning-Tracker/My-Learning-Tracker/REACT/16-Forms/end-proyect/src/Hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = {\n  value: \"\",\n  isTouched: false,\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return { value: action.value, isTouched: state.isTouched };\n  }\n\n  if (action.type === \"BLUR\") {\n    return { isTouched: true, value: state.value };\n  }\n\n  if (action.type === \"RESET\") {\n    return { isTouched: false, value: \"\" };\n  }\n\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (e) => {\n    dispatch({ type: \"INPUT\", value: e.target.value });\n  };\n\n  const inputBlurHandler = () => {\n    dispatch({ type: \"BLUR\" });\n  };\n\n  const reset = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EADiB;EAExBC,SAAS,EAAE;AAFa,CAA1B;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC3C,IAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;IAC3B,OAAO;MAAEL,KAAK,EAAEI,MAAM,CAACJ,KAAhB;MAAuBC,SAAS,EAAEE,KAAK,CAACF;IAAxC,CAAP;EACD;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;IAC1B,OAAO;MAAEJ,SAAS,EAAE,IAAb;MAAmBD,KAAK,EAAEG,KAAK,CAACH;IAAhC,CAAP;EACD;;EAED,IAAII,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;IAC3B,OAAO;MAAEJ,SAAS,EAAE,KAAb;MAAoBD,KAAK,EAAE;IAA3B,CAAP;EACD;;EAED,OAAOE,iBAAP;AACD,CAdD;;AAgBA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAClC,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CACvCI,iBADuC,EAEvCH,iBAFuC,CAAzC;EAKA,MAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC;EACA,MAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAA7C;;EAEA,MAAMW,kBAAkB,GAAIC,CAAD,IAAO;IAChCJ,QAAQ,CAAC;MAAEJ,IAAI,EAAE,OAAR;MAAiBL,KAAK,EAAEa,CAAC,CAACC,MAAF,CAASd;IAAjC,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMe,gBAAgB,GAAG,MAAM;IAC7BN,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMW,KAAK,GAAG,MAAM;IAClBP,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD;;EAIA,OAAO;IACLL,KAAK,EAAEQ,UAAU,CAACR,KADb;IAELiB,OAAO,EAAEP,YAFJ;IAGLC,QAHK;IAILC,kBAJK;IAKLG,gBALK;IAMLC;EANK,CAAP;AAQD,CA7BD;;GAAMV,Q;;AA+BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}